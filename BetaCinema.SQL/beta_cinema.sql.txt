-- DROP SCHEMA public;

CREATE SCHEMA public AUTHORIZATION pg_database_owner;

-- DROP SEQUENCE public."RoleClaims_Id_seq";

CREATE SEQUENCE public."RoleClaims_Id_seq"
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public."UserClaims_Id_seq";

CREATE SEQUENCE public."UserClaims_Id_seq"
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- public."Roles" definition

-- Drop table

-- DROP TABLE public."Roles";

CREATE TABLE public."Roles" (
	"Id" text NOT NULL,
	"Name" varchar(256) NULL,
	"NormalizedName" varchar(256) NULL,
	"ConcurrencyStamp" text NULL,
	CONSTRAINT "PK_Roles" PRIMARY KEY ("Id")
);
CREATE UNIQUE INDEX "RoleNameIndex" ON public."Roles" USING btree ("NormalizedName");


-- public."__EFMigrationsHistory" definition

-- Drop table

-- DROP TABLE public."__EFMigrationsHistory";

CREATE TABLE public."__EFMigrationsHistory" (
	"MigrationId" varchar(150) NOT NULL,
	"ProductVersion" varchar(32) NOT NULL,
	CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);


-- public.category definition

-- Drop table

-- DROP TABLE public.category;

CREATE TABLE public.category (
	id text NOT NULL,
	category_name varchar(255) NOT NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT category_pkey PRIMARY KEY (id)
);


-- public.cinema definition

-- Drop table

-- DROP TABLE public.cinema;

CREATE TABLE public.cinema (
	id text NOT NULL,
	cinema_name varchar(50) NOT NULL,
	cinema_location varchar(255) NOT NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT cinema_pkey PRIMARY KEY (id)
);


-- public.movie definition

-- Drop table

-- DROP TABLE public.movie;

CREATE TABLE public.movie (
	id text NOT NULL,
	movie_name varchar(255) NOT NULL,
	poster text NULL,
	duration int4 NOT NULL,
	release_date date NOT NULL,
	director varchar(255) NULL DEFAULT NULL::character varying,
	actor varchar(255) NULL DEFAULT NULL::character varying,
	description text NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT movie_pkey PRIMARY KEY (id)
);


-- public.seat definition

-- Drop table

-- DROP TABLE public.seat;

CREATE TABLE public.seat (
	id text NOT NULL,
	row_num varchar(1) NOT NULL,
	seat_num int4 NOT NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT seat_pkey PRIMARY KEY (id)
);


-- public."user" definition

-- Drop table

-- DROP TABLE public."user";

CREATE TABLE public."user" (
	id text NOT NULL,
	fullname varchar(100) NOT NULL,
	"password" varchar(25) NOT NULL,
	"role" varchar(25) NOT NULL,
	avatar text NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL DEFAULT now(),
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL DEFAULT now(),
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	"UserName" varchar(256) NULL,
	"NormalizedUserName" varchar(256) NULL,
	email varchar(100) NULL,
	"NormalizedEmail" varchar(256) NULL,
	"EmailConfirmed" bool NOT NULL,
	"PasswordHash" text NULL,
	"SecurityStamp" text NULL,
	"ConcurrencyStamp" text NULL,
	"PhoneNumber" text NULL,
	"PhoneNumberConfirmed" bool NOT NULL,
	"TwoFactorEnabled" bool NOT NULL,
	"LockoutEnd" timestamptz NULL,
	"LockoutEnabled" bool NOT NULL,
	"AccessFailedCount" int4 NOT NULL,
	CONSTRAINT user_pkey PRIMARY KEY (id)
);
CREATE INDEX "EmailIndex" ON public."user" USING btree ("NormalizedEmail");
CREATE UNIQUE INDEX "UserNameIndex" ON public."user" USING btree ("NormalizedUserName");


-- public."RoleClaims" definition

-- Drop table

-- DROP TABLE public."RoleClaims";

CREATE TABLE public."RoleClaims" (
	"Id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	"RoleId" text NOT NULL,
	"ClaimType" text NULL,
	"ClaimValue" text NULL,
	CONSTRAINT "PK_RoleClaims" PRIMARY KEY ("Id"),
	CONSTRAINT "FK_RoleClaims_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."Roles"("Id") ON DELETE CASCADE
);
CREATE INDEX "IX_RoleClaims_RoleId" ON public."RoleClaims" USING btree ("RoleId");


-- public."UserClaims" definition

-- Drop table

-- DROP TABLE public."UserClaims";

CREATE TABLE public."UserClaims" (
	"Id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	"UserId" text NOT NULL,
	"ClaimType" text NULL,
	"ClaimValue" text NULL,
	CONSTRAINT "PK_UserClaims" PRIMARY KEY ("Id"),
	CONSTRAINT "FK_UserClaims_user_UserId" FOREIGN KEY ("UserId") REFERENCES public."user"(id) ON DELETE CASCADE
);
CREATE INDEX "IX_UserClaims_UserId" ON public."UserClaims" USING btree ("UserId");


-- public."UserLogins" definition

-- Drop table

-- DROP TABLE public."UserLogins";

CREATE TABLE public."UserLogins" (
	"LoginProvider" text NOT NULL,
	"ProviderKey" text NOT NULL,
	"ProviderDisplayName" text NULL,
	"UserId" text NOT NULL,
	CONSTRAINT "PK_UserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
	CONSTRAINT "FK_UserLogins_user_UserId" FOREIGN KEY ("UserId") REFERENCES public."user"(id) ON DELETE CASCADE
);
CREATE INDEX "IX_UserLogins_UserId" ON public."UserLogins" USING btree ("UserId");


-- public."UserRoles" definition

-- Drop table

-- DROP TABLE public."UserRoles";

CREATE TABLE public."UserRoles" (
	"UserId" text NOT NULL,
	"RoleId" text NOT NULL,
	CONSTRAINT "PK_UserRoles" PRIMARY KEY ("UserId", "RoleId"),
	CONSTRAINT "FK_UserRoles_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."Roles"("Id") ON DELETE CASCADE,
	CONSTRAINT "FK_UserRoles_user_UserId" FOREIGN KEY ("UserId") REFERENCES public."user"(id) ON DELETE CASCADE
);
CREATE INDEX "IX_UserRoles_RoleId" ON public."UserRoles" USING btree ("RoleId");


-- public."UserTokens" definition

-- Drop table

-- DROP TABLE public."UserTokens";

CREATE TABLE public."UserTokens" (
	"UserId" text NOT NULL,
	"LoginProvider" text NOT NULL,
	"Name" text NOT NULL,
	"Value" text NULL,
	CONSTRAINT "PK_UserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
	CONSTRAINT "FK_UserTokens_user_UserId" FOREIGN KEY ("UserId") REFERENCES public."user"(id) ON DELETE CASCADE
);


-- public.movie_category definition

-- Drop table

-- DROP TABLE public.movie_category;

CREATE TABLE public.movie_category (
	id text NOT NULL,
	movie_id uuid NOT NULL,
	category_id uuid NOT NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT movie_category_pkey PRIMARY KEY (id),
	CONSTRAINT fk_movie_category_category_id FOREIGN KEY (id) REFERENCES public.category(id),
	CONSTRAINT fk_movie_category_movie_id FOREIGN KEY (id) REFERENCES public.movie(id)
);


-- public.showtime definition

-- Drop table

-- DROP TABLE public.showtime;

CREATE TABLE public.showtime (
	id text NOT NULL,
	movie_id uuid NOT NULL,
	cinema_id uuid NOT NULL,
	start_time timestamp NOT NULL,
	ticket_price int4 NOT NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT showtime_pkey PRIMARY KEY (id),
	CONSTRAINT fk_showtime_cinema_id FOREIGN KEY (id) REFERENCES public.cinema(id),
	CONSTRAINT fk_showtime_movie_id FOREIGN KEY (id) REFERENCES public.movie(id)
);


-- public.reservation definition

-- Drop table

-- DROP TABLE public.reservation;

CREATE TABLE public.reservation (
	id text NOT NULL,
	showtime_id uuid NOT NULL,
	user_id uuid NOT NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT reservation_pkey PRIMARY KEY (id),
	CONSTRAINT fk_reservation_showtime_id FOREIGN KEY (id) REFERENCES public.showtime(id),
	CONSTRAINT fk_reservation_user_id FOREIGN KEY (id) REFERENCES public."user"(id)
);


-- public.reservation_item definition

-- Drop table

-- DROP TABLE public.reservation_item;

CREATE TABLE public.reservation_item (
	id text NOT NULL,
	reservation_id uuid NOT NULL,
	seat_id uuid NOT NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT reservation_item_pkey PRIMARY KEY (id),
	CONSTRAINT fk_reservation_item_reservation_id FOREIGN KEY (id) REFERENCES public.reservation(id),
	CONSTRAINT fk_reservation_item_seat_id FOREIGN KEY (id) REFERENCES public.seat(id)
);


-- public.payment definition

-- Drop table

-- DROP TABLE public.payment;

CREATE TABLE public.payment (
	id text NOT NULL,
	reservation_id uuid NOT NULL,
	total_price int4 NOT NULL,
	payment_method varchar(255) NOT NULL,
	delete_flag bool NOT NULL,
	created_date timestamp NOT NULL,
	created_by varchar(100) NULL DEFAULT NULL::character varying,
	modified_date timestamp NOT NULL,
	modified_by varchar(100) NULL DEFAULT NULL::character varying,
	CONSTRAINT payment_pkey PRIMARY KEY (id),
	CONSTRAINT fk_payment_reservation_id FOREIGN KEY (id) REFERENCES public.reservation(id)
);